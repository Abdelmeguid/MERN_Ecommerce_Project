In MongoDB, you can store images in the schema using the `Buffer` data type. The `Buffer` data type is designed to store binary data, including image data, as a sequence of bytes.

When defining the image field in your schema, you can specify the type as `Buffer`. Here's an example:

```javascript
const mongoose = require('mongoose');

const imageSchema = new mongoose.Schema({
  image: {
    type: Buffer,
    required: true
  }
});

const ImageModel = mongoose.model('Image', imageSchema);

module.exports = ImageModel;
```

In this example, the `image` field in the schema is defined with the `Buffer` type. The `Buffer` type allows you to store binary data, including the binary representation of an image. The `required: true` option indicates that the image field is required for every document of this schema.

By using the `Buffer` type, you can store image data directly within MongoDB documents. It's important to note that when storing images as `Buffer`, you should consider the size and storage limitations of MongoDB. For large images or a large number of images, it may be more efficient to store them in a separate storage system and store their references (e.g., URLs, file paths) in MongoDB instead.

Additionally, when storing images in the database, it's recommended to properly optimize and compress the images to balance storage space and performance.